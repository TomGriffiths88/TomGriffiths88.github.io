{"version":3,"sources":["Components/FilterBar/FilterToken/FilterToken.module.css","Components/PostsGrid/PostsGrid.module.css","Components/FilterBar/FilterBar.module.css","Components/Footer/Footer.module.css","Assets/weather.jpg","Assets/wildrose.jpg","Assets/angelina.jpg","Assets/photo.jpg","Assets/crochet.jpg","Assets/cocktail.jpg","Components/Navbar/Navbar.js","Components/Header/Header.js","Components/PortfolioCard/PortfolioCard.js","Components/PostsGrid/PostsGrid.js","Components/FilterBar/FilterToken/FilterToken.js","Components/FilterBar/FilterBar.js","Components/Footer/Footer.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","navbar","className","href","header","props","portfolioCard","onClick","window","open","url","src","image","alt","title","description","label","postsGrid","styles","PostsGrid","children","filterToken","curStyles","FilterToken","filter","active","join","click","filterBar","allLabels","posts","map","post","uniqueLabels","Set","tokens","key","FilterBar","footer","year","Date","getFullYear","Footer","App","state","id","image1","crochet","image3","image4","image5","image6","filterClickHandler","e","target","innerHTML","setState","this","clearFilter","clearFilterHandler","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85f97c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterToken\":\"FilterToken_FilterToken__1xpV4\",\"active\":\"FilterToken_active__IcqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsGrid\":\"PostsGrid_PostsGrid__1d24V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterBar\":\"FilterBar_FilterBar__sIfu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__IrRCd\"};","module.exports = __webpack_public_path__ + \"static/media/weather.5f3284f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wildrose.7b775c33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angelina.e5a41455.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photo.0ddebf13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crochet.7c0605a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cocktail.a2c0fa51.jpg\";","import React from 'react';\nimport './Navbar.css';\n\nconst navbar = () => {\n\n    \n    return(\n        <ul className=\"navbar\">\n            <li className=\"navbar__item\"><a href=\"https://github.com/TomGriffiths88\" className=\"navbar__link\">Github</a></li>\n            <li className=\"navbar__item\"><a href=\"mailto:tom@tompatrick.dev\" className=\"navbar__link\">Email</a></li>\n        </ul>\n    )\n}\n\n\nexport default navbar;","import React from 'react';\nimport './Header.css';\nimport Navbar from '../Navbar/Navbar';\n\n\nconst header = (props) => {\n\n    return (\n        <div className=\"header\">\n            <h1 className=\"header__logo\">Tom Patrick</h1>   \n            <span className=\"header__strap\">Front-end Designer / Developer</span>\n            <Navbar />\n        </div>\n    )\n}\n\n\nexport default header;","import React from 'react';\nimport \"./PortfolioCard.css\";\n \nconst portfolioCard = (props) => {\n\n    const navigate = () => {\n        window.open(props.url);\n    }\n\n    return(\n\n        <div className=\"portfolioCard\" onClick={navigate}>\n            <img src={props.image} alt=\"img\"/>\n            <div className=\"portfolioCard__meta\">\n                <h3 className=\"portfolioCard__title\">{props.title}</h3>\n                <p className=\"portfolioCard__desc\">{props.description}</p>\n                <span className=\"portfolioCard__label\" >{props.label}</span>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default portfolioCard;","import React from 'react';\nimport styles from './PostsGrid.module.css';\n\nconst postsGrid = (props) => (\n    <div className={styles.PostsGrid}>\n        {props.children}\n    </div>\n)\n\nexport default postsGrid;","import React from 'react';\nimport styles from './FilterToken.module.css';\n\nconst filterToken = (props) => {\n\n    let curStyles = [styles.FilterToken];\n    if (props.filter === props.children) {\n        curStyles = [styles.FilterToken, styles.active];\n    }\n\n    return(\n        <button className={curStyles.join(' ')} onClick={props.click}>{props.children}</button>\n    )\n}\n    \n\n\nexport default filterToken;","import React from 'react';\nimport styles from './FilterBar.module.css';\nimport FilterToken from './FilterToken/FilterToken';\n\nconst filterBar = (props) => {\n\n    const allLabels = props.posts.map(post => post.label);\n    let uniqueLabels = new Set(allLabels);\n    uniqueLabels = [...uniqueLabels];\n    const tokens = uniqueLabels.map(label => <FilterToken key={label} click={props.click} filter={props.filter}>{label}</FilterToken>);\n\n\n    return (\n        <div className={styles.FilterBar}>\n            <FilterToken key=\"all\" click={props.click} filter={props.filter}>All</FilterToken>\n            {tokens}\n        </div>\n    )\n\n}\n\nexport default filterBar;","import React from 'react';\nimport styles from './Footer.module.css';\n\nconst footer = () => {\n\n    const year = new Date().getFullYear();\n\n    return(\n        <footer className={styles.Footer}>\n           <p>&copy; {year} Tom Patrick. All rights reserved.</p> \n        </footer>\n    )\n\n}\n  \n\nexport default footer;","import React, { Component } from 'react';\nimport Header from '../Components/Header/Header';\nimport PortfolioCard from '../Components/PortfolioCard/PortfolioCard';\nimport PostsGrid from '../Components/PostsGrid/PostsGrid';\nimport FilterBar from '../Components/FilterBar/FilterBar';\nimport Footer from '../Components/Footer/Footer';\n\nimport './App.css';\n\n// image imports\nimport image1 from '../Assets/weather.jpg';\nimport image3 from '../Assets/wildrose.jpg';\nimport image4 from '../Assets/angelina.jpg';\nimport image5 from '../Assets/photo.jpg';\nimport crochet from '../Assets/crochet.jpg'\nimport image6 from '../Assets/cocktail.jpg';\n\n\nclass App extends Component {\n\n  state = {\n    posts: [\n      { \n        id: '1',\n        image: image1,\n        title: \"My Weather\",\n        description: \"A little app that checks the local weather, using the Accuweather API\",\n        label: \"Vanilla JS\",\n        url: \"https://tomgriffiths88.github.io/weather-app-demo/\"\n      },\n      { \n        id: '2',\n        image: crochet,\n        title: \"Crochet Calculator\",\n        description: \"An online tool to help crocheters work out perfect patterns\",\n        label: \"Vanilla JS\",\n        url: \"http://www.crochetcalculator.co.uk\"\n      },\n      { \n        id: '3',\n        image: image3,\n        title: \"Wild Rose Forge\",\n        description: \"Static website, designed and built for a local black smith\",\n        label: \"Static\",\n        url: \"http://wildroseforge.com/\"\n      },\n      { \n        id: '4',\n        image: image4,\n        title: \"Angelina Paloma\",\n        description: \"A wordpress site, designed and developed for a local artist\",\n        label: \"Wordpress\",\n        url: \"https://www.angelinapaloma.com/\"\n      },\n      { \n        id: '5',\n        image: image5,\n        title: \"Tom Griffiths Photos\",\n        description: \"A wordpress site for my photography work\",\n        label: \"Wordpress\",\n        url: \"https://www.tomgriffithsphotos.com\"\n      },\n      { \n        id: '6',\n        image: image6,\n        title: \"Bar Buddy\",\n        description: \"A react cocktail recipe app, that pulls data from the cocktail db api.\",\n        label: \"React\",\n        url: \"https://tomgriffiths88.github.io/bar-buddy\"\n      }\n    ],\n    filter: 'All',\n  }\n\n  filterClickHandler = (e) => {\n    const filter = e.target.innerHTML;\n    this.setState({filter: filter});\n  };\n\n  render() {\n\n    const posts = this.state.posts.map(post => {\n        if(post.label === this.state.filter || this.state.filter === 'All') {\n          return  <PortfolioCard title={post.title} image={post.image} description={post.description} label={post.label} url={post.url} key={post.id}/>\n        } else {\n          return null;\n        }\n      });\n    \n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header/>\n          <FilterBar posts={this.state.posts} click={this.filterClickHandler} clearFilter={this.clearFilterHandler} filter={this.state.filter}/>\n            <PostsGrid>\n            {posts}\n            </PostsGrid>\n          <Footer />\n        </div>\n    </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}